'''
'쉬운 계단 수'
문제 : 45656이란 수를 보자.
이 수는 인접한 모든 자리의 차이가 1이다. 이런 수를 계단 수라고 한다.
N이 주어질 때, 길이가 N인 계단 수가 총 몇 개 있는지 구해보자. 0으로 시작하는 수는 계단수가 아니다.

출력 : 첫째 줄에 N이 주어진다. N은 1보다 크거나 같고, 100보다 작거나 같은 자연수이다.

입력 : 첫째 줄에 정답을 1,000,000,000으로 나눈 나머지를 출력한다.

comment : 이 문제는 아래와 같이 0, 1~8, 9를 나눠서 생각해야하는 문제이다. 
          - 앞자리가 0일 경우 : 1
          - 앞자리가 1~8일 경우 : 앞자리 ± 1
          - 앞자리가 9일 경우 : 8
          여기까지는 생각했는데 이걸 어떻게 구현해야할지 감이 오지 않아 인터넷을 참고하여 풀었다.
          이중 DP테이블(d[자리수][앞자리 숫자])을 이용해 경우의 수를 저장해야 하는 문제였다.
          답을 참고하여 풀었기 때문에 다음에 다시 풀어봐야한다.
'''
n = int(input())

d = [[0]*10 for i in range(n+1)]
for i in range(1, 10):
    d[1][i] = 1

for i in range(2, n+1):
    for j in range(10):
        if j == 0:
            d[i][j] = d[i-1][1]
        elif j == 9:
            d[i][j] = d[i-1][8]
        else:
            d[i][j] = d[i-1][j-1] + d[i-1][j+1]

print(sum(d[n]) % 1000000000)